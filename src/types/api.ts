// let's imagine this file is autogenerated from the backend
// ideally, we want to keep these api related types in sync
// with the backend instead of manually writing them out

export type BaseEntity = {
  id: number;
  createdAt: number | null;
  updatedAt: number | null;
  archivedAt: number | null;
};

// This type appends the BaseEntity type to all properties of T
// [K in keyof T]: T[K] means that for each key K in T, we want to keep the type of T[K]
export type Entity<T> = {
  [K in keyof T]: T[K];
} & BaseEntity;

export type Meta = {
  page: number;
  total: number;
  totalPages: number;
};

export type User = Entity<{
  firstName: string;
  lastName: string;
  email: string;
  role: "ADMIN" | "USER";
  bio: string;
}>;

export type AuthResponse = {
  jwt: string;
  user: User;
};

export type Shelter = Entity<{
  name: string;
  address: string;
  phone: string;
  email: string;
  website: string;
}>;
